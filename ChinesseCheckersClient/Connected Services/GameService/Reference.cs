//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChinesseCheckersClient.GameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    public enum OperationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sucessfull = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConnectionLost = 100,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/Logic")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChinesseCheckersClient.GameService.Configuration PlayerConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChinesseCheckersClient.GameService.Player PlayerLogedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChinesseCheckersClient.GameService.Configuration PlayerConfiguration {
            get {
                return this.PlayerConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerConfigurationField, value) != true)) {
                    this.PlayerConfigurationField = value;
                    this.RaisePropertyChanged("PlayerConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChinesseCheckersClient.GameService.Player PlayerLoged {
            get {
                return this.PlayerLogedField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerLogedField, value) != true)) {
                    this.PlayerLogedField = value;
                    this.RaisePropertyChanged("PlayerLoged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Configuration", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Configuration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string languageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double volMusicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdConfiguration {
            get {
                return this.IdConfigurationField;
            }
            set {
                if ((this.IdConfigurationField.Equals(value) != true)) {
                    this.IdConfigurationField = value;
                    this.RaisePropertyChanged("IdConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string language {
            get {
                return this.languageField;
            }
            set {
                if ((object.ReferenceEquals(this.languageField, value) != true)) {
                    this.languageField = value;
                    this.RaisePropertyChanged("language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double volMusic {
            get {
                return this.volMusicField;
            }
            set {
                if ((this.volMusicField.Equals(value) != true)) {
                    this.volMusicField = value;
                    this.RaisePropertyChanged("volMusic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/ChinesseCheckersServer")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, object> ChatCallbacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, object> GameplayCallbacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdRoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfAllowedPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, ChinesseCheckersClient.GameService.Player> PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, object> RoomCallbacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TurnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, object> ChatCallbacks {
            get {
                return this.ChatCallbacksField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatCallbacksField, value) != true)) {
                    this.ChatCallbacksField = value;
                    this.RaisePropertyChanged("ChatCallbacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, object> GameplayCallbacks {
            get {
                return this.GameplayCallbacksField;
            }
            set {
                if ((object.ReferenceEquals(this.GameplayCallbacksField, value) != true)) {
                    this.GameplayCallbacksField = value;
                    this.RaisePropertyChanged("GameplayCallbacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdRoom {
            get {
                return this.IdRoomField;
            }
            set {
                if ((object.ReferenceEquals(this.IdRoomField, value) != true)) {
                    this.IdRoomField = value;
                    this.RaisePropertyChanged("IdRoom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfAllowedPlayers {
            get {
                return this.NumberOfAllowedPlayersField;
            }
            set {
                if ((this.NumberOfAllowedPlayersField.Equals(value) != true)) {
                    this.NumberOfAllowedPlayersField = value;
                    this.RaisePropertyChanged("NumberOfAllowedPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, ChinesseCheckersClient.GameService.Player> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, object> RoomCallbacks {
            get {
                return this.RoomCallbacksField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCallbacksField, value) != true)) {
                    this.RoomCallbacksField = value;
                    this.RaisePropertyChanged("RoomCallbacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Turn {
            get {
                return this.TurnField;
            }
            set {
                if ((this.TurnField.Equals(value) != true)) {
                    this.TurnField = value;
                    this.RaisePropertyChanged("Turn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Relationship", Namespace="http://schemas.datacontract.org/2004/07/DataAccess")]
    [System.SerializableAttribute()]
    public partial class Relationship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBadRelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idGuestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idOwnerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRelationship {
            get {
                return this.IdRelationshipField;
            }
            set {
                if ((this.IdRelationshipField.Equals(value) != true)) {
                    this.IdRelationshipField = value;
                    this.RaisePropertyChanged("IdRelationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBadRelation {
            get {
                return this.IsBadRelationField;
            }
            set {
                if ((this.IsBadRelationField.Equals(value) != true)) {
                    this.IsBadRelationField = value;
                    this.RaisePropertyChanged("IsBadRelation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idGuest {
            get {
                return this.idGuestField;
            }
            set {
                if ((this.idGuestField.Equals(value) != true)) {
                    this.idGuestField = value;
                    this.RaisePropertyChanged("idGuest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idOwner {
            get {
                return this.idOwnerField;
            }
            set {
                if ((this.idOwnerField.Equals(value) != true)) {
                    this.idOwnerField = value;
                    this.RaisePropertyChanged("idOwner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IPlayerMgt")]
    public interface IPlayerMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerMgt/RegisterPlayerResponse")]
        ChinesseCheckersClient.GameService.OperationResult RegisterPlayer(string _nickname, string _password, string _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerMgt/RegisterPlayerResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> RegisterPlayerAsync(string _nickname, string _password, string _email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/Login", ReplyAction="http://tempuri.org/IPlayerMgt/LoginResponse")]
        ChinesseCheckersClient.GameService.Session Login(string _email, string _password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/Login", ReplyAction="http://tempuri.org/IPlayerMgt/LoginResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Session> LoginAsync(string _email, string _password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/DeletePlayer", ReplyAction="http://tempuri.org/IPlayerMgt/DeletePlayerResponse")]
        ChinesseCheckersClient.GameService.OperationResult DeletePlayer(int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/DeletePlayer", ReplyAction="http://tempuri.org/IPlayerMgt/DeletePlayerResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> DeletePlayerAsync(int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/UpdateConfiguration", ReplyAction="http://tempuri.org/IPlayerMgt/UpdateConfigurationResponse")]
        ChinesseCheckersClient.GameService.OperationResult UpdateConfiguration(ChinesseCheckersClient.GameService.Configuration _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/UpdateConfiguration", ReplyAction="http://tempuri.org/IPlayerMgt/UpdateConfigurationResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> UpdateConfigurationAsync(ChinesseCheckersClient.GameService.Configuration _configuration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/UpdatePlayer", ReplyAction="http://tempuri.org/IPlayerMgt/UpdatePlayerResponse")]
        ChinesseCheckersClient.GameService.OperationResult UpdatePlayer(ChinesseCheckersClient.GameService.Player _player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/UpdatePlayer", ReplyAction="http://tempuri.org/IPlayerMgt/UpdatePlayerResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> UpdatePlayerAsync(ChinesseCheckersClient.GameService.Player _player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/SearchPlayerById", ReplyAction="http://tempuri.org/IPlayerMgt/SearchPlayerByIdResponse")]
        ChinesseCheckersClient.GameService.Player SearchPlayerById(int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerMgt/SearchPlayerById", ReplyAction="http://tempuri.org/IPlayerMgt/SearchPlayerByIdResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Player> SearchPlayerByIdAsync(int _idPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerMgtChannel : ChinesseCheckersClient.GameService.IPlayerMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerMgtClient : System.ServiceModel.ClientBase<ChinesseCheckersClient.GameService.IPlayerMgt>, ChinesseCheckersClient.GameService.IPlayerMgt {
        
        public PlayerMgtClient() {
        }
        
        public PlayerMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChinesseCheckersClient.GameService.OperationResult RegisterPlayer(string _nickname, string _password, string _email) {
            return base.Channel.RegisterPlayer(_nickname, _password, _email);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> RegisterPlayerAsync(string _nickname, string _password, string _email) {
            return base.Channel.RegisterPlayerAsync(_nickname, _password, _email);
        }
        
        public ChinesseCheckersClient.GameService.Session Login(string _email, string _password) {
            return base.Channel.Login(_email, _password);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Session> LoginAsync(string _email, string _password) {
            return base.Channel.LoginAsync(_email, _password);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult DeletePlayer(int _idPlayer) {
            return base.Channel.DeletePlayer(_idPlayer);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> DeletePlayerAsync(int _idPlayer) {
            return base.Channel.DeletePlayerAsync(_idPlayer);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult UpdateConfiguration(ChinesseCheckersClient.GameService.Configuration _configuration) {
            return base.Channel.UpdateConfiguration(_configuration);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> UpdateConfigurationAsync(ChinesseCheckersClient.GameService.Configuration _configuration) {
            return base.Channel.UpdateConfigurationAsync(_configuration);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult UpdatePlayer(ChinesseCheckersClient.GameService.Player _player) {
            return base.Channel.UpdatePlayer(_player);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> UpdatePlayerAsync(ChinesseCheckersClient.GameService.Player _player) {
            return base.Channel.UpdatePlayerAsync(_player);
        }
        
        public ChinesseCheckersClient.GameService.Player SearchPlayerById(int _idPlayer) {
            return base.Channel.SearchPlayerById(_idPlayer);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Player> SearchPlayerByIdAsync(int _idPlayer) {
            return base.Channel.SearchPlayerByIdAsync(_idPlayer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IConnectionTestMgt")]
    public interface IConnectionTestMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTestMgt/IsConnectionUp", ReplyAction="http://tempuri.org/IConnectionTestMgt/IsConnectionUpResponse")]
        bool IsConnectionUp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnectionTestMgt/IsConnectionUp", ReplyAction="http://tempuri.org/IConnectionTestMgt/IsConnectionUpResponse")]
        System.Threading.Tasks.Task<bool> IsConnectionUpAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectionTestMgtChannel : ChinesseCheckersClient.GameService.IConnectionTestMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionTestMgtClient : System.ServiceModel.ClientBase<ChinesseCheckersClient.GameService.IConnectionTestMgt>, ChinesseCheckersClient.GameService.IConnectionTestMgt {
        
        public ConnectionTestMgtClient() {
        }
        
        public ConnectionTestMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConnectionTestMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectionTestMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectionTestMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsConnectionUp() {
            return base.Channel.IsConnectionUp();
        }
        
        public System.Threading.Tasks.Task<bool> IsConnectionUpAsync() {
            return base.Channel.IsConnectionUpAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IChatMgt", CallbackContract=typeof(ChinesseCheckersClient.GameService.IChatMgtCallback))]
    public interface IChatMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/JoinToChat", ReplyAction="http://tempuri.org/IChatMgt/JoinToChatResponse")]
        void JoinToChat(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/JoinToChat", ReplyAction="http://tempuri.org/IChatMgt/JoinToChatResponse")]
        System.Threading.Tasks.Task JoinToChatAsync(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/SendMessage", ReplyAction="http://tempuri.org/IChatMgt/SendMessageResponse")]
        void SendMessage(string _idRoom, string _nickname, string _message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/SendMessage", ReplyAction="http://tempuri.org/IChatMgt/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string _idRoom, string _nickname, string _message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/SendFrienRequest", ReplyAction="http://tempuri.org/IChatMgt/SendFrienRequestResponse")]
        void SendFrienRequest(string _idRoom, int _idApplicantPlayer, string _nicknameApplicantPlayer, int _idPlayerAddressed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/SendFrienRequest", ReplyAction="http://tempuri.org/IChatMgt/SendFrienRequestResponse")]
        System.Threading.Tasks.Task SendFrienRequestAsync(string _idRoom, int _idApplicantPlayer, string _nicknameApplicantPlayer, int _idPlayerAddressed);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatMgtCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/ReceiveMessage", ReplyAction="http://tempuri.org/IChatMgt/ReceiveMessageResponse")]
        void ReceiveMessage(string _nickname, string _message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatMgt/ReceiveFriendRequest", ReplyAction="http://tempuri.org/IChatMgt/ReceiveFriendRequestResponse")]
        void ReceiveFriendRequest(int _idApplicantPlayer, string _nicknameApplicantPlayer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatMgtChannel : ChinesseCheckersClient.GameService.IChatMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatMgtClient : System.ServiceModel.DuplexClientBase<ChinesseCheckersClient.GameService.IChatMgt>, ChinesseCheckersClient.GameService.IChatMgt {
        
        public ChatMgtClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatMgtClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinToChat(string _idRoom, int _idPlayer) {
            base.Channel.JoinToChat(_idRoom, _idPlayer);
        }
        
        public System.Threading.Tasks.Task JoinToChatAsync(string _idRoom, int _idPlayer) {
            return base.Channel.JoinToChatAsync(_idRoom, _idPlayer);
        }
        
        public void SendMessage(string _idRoom, string _nickname, string _message) {
            base.Channel.SendMessage(_idRoom, _nickname, _message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string _idRoom, string _nickname, string _message) {
            return base.Channel.SendMessageAsync(_idRoom, _nickname, _message);
        }
        
        public void SendFrienRequest(string _idRoom, int _idApplicantPlayer, string _nicknameApplicantPlayer, int _idPlayerAddressed) {
            base.Channel.SendFrienRequest(_idRoom, _idApplicantPlayer, _nicknameApplicantPlayer, _idPlayerAddressed);
        }
        
        public System.Threading.Tasks.Task SendFrienRequestAsync(string _idRoom, int _idApplicantPlayer, string _nicknameApplicantPlayer, int _idPlayerAddressed) {
            return base.Channel.SendFrienRequestAsync(_idRoom, _idApplicantPlayer, _nicknameApplicantPlayer, _idPlayerAddressed);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IRoomMgt", CallbackContract=typeof(ChinesseCheckersClient.GameService.IRoomMgtCallback))]
    public interface IRoomMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/CreateRoom", ReplyAction="http://tempuri.org/IRoomMgt/CreateRoomResponse")]
        string CreateRoom(int _numberOfAllowedPlayers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/CreateRoom", ReplyAction="http://tempuri.org/IRoomMgt/CreateRoomResponse")]
        System.Threading.Tasks.Task<string> CreateRoomAsync(int _numberOfAllowedPlayers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/SearchRoom", ReplyAction="http://tempuri.org/IRoomMgt/SearchRoomResponse")]
        ChinesseCheckersClient.GameService.Room SearchRoom(string _idRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/SearchRoom", ReplyAction="http://tempuri.org/IRoomMgt/SearchRoomResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Room> SearchRoomAsync(string _idRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/JoinToRoom", ReplyAction="http://tempuri.org/IRoomMgt/JoinToRoomResponse")]
        int JoinToRoom(string _idRoom, ChinesseCheckersClient.GameService.Player _player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/JoinToRoom", ReplyAction="http://tempuri.org/IRoomMgt/JoinToRoomResponse")]
        System.Threading.Tasks.Task<int> JoinToRoomAsync(string _idRoom, ChinesseCheckersClient.GameService.Player _player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/LeaveRoom", ReplyAction="http://tempuri.org/IRoomMgt/LeaveRoomResponse")]
        ChinesseCheckersClient.GameService.OperationResult LeaveRoom(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/LeaveRoom", ReplyAction="http://tempuri.org/IRoomMgt/LeaveRoomResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> LeaveRoomAsync(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/IsPlayerInRoom", ReplyAction="http://tempuri.org/IRoomMgt/IsPlayerInRoomResponse")]
        bool IsPlayerInRoom(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/IsPlayerInRoom", ReplyAction="http://tempuri.org/IRoomMgt/IsPlayerInRoomResponse")]
        System.Threading.Tasks.Task<bool> IsPlayerInRoomAsync(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/NotifyAllPlayersReady", ReplyAction="http://tempuri.org/IRoomMgt/NotifyAllPlayersReadyResponse")]
        void NotifyAllPlayersReady(string _idRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/NotifyAllPlayersReady", ReplyAction="http://tempuri.org/IRoomMgt/NotifyAllPlayersReadyResponse")]
        System.Threading.Tasks.Task NotifyAllPlayersReadyAsync(string _idRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomMgtCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/SendAllPlayerToGameplay", ReplyAction="http://tempuri.org/IRoomMgt/SendAllPlayerToGameplayResponse")]
        void SendAllPlayerToGameplay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRoomMgt/UpdateNumberOfPlayersConected", ReplyAction="http://tempuri.org/IRoomMgt/UpdateNumberOfPlayersConectedResponse")]
        void UpdateNumberOfPlayersConected(int _numberOfPlayers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoomMgtChannel : ChinesseCheckersClient.GameService.IRoomMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoomMgtClient : System.ServiceModel.DuplexClientBase<ChinesseCheckersClient.GameService.IRoomMgt>, ChinesseCheckersClient.GameService.IRoomMgt {
        
        public RoomMgtClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public RoomMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public RoomMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RoomMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public RoomMgtClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string CreateRoom(int _numberOfAllowedPlayers) {
            return base.Channel.CreateRoom(_numberOfAllowedPlayers);
        }
        
        public System.Threading.Tasks.Task<string> CreateRoomAsync(int _numberOfAllowedPlayers) {
            return base.Channel.CreateRoomAsync(_numberOfAllowedPlayers);
        }
        
        public ChinesseCheckersClient.GameService.Room SearchRoom(string _idRoom) {
            return base.Channel.SearchRoom(_idRoom);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Room> SearchRoomAsync(string _idRoom) {
            return base.Channel.SearchRoomAsync(_idRoom);
        }
        
        public int JoinToRoom(string _idRoom, ChinesseCheckersClient.GameService.Player _player) {
            return base.Channel.JoinToRoom(_idRoom, _player);
        }
        
        public System.Threading.Tasks.Task<int> JoinToRoomAsync(string _idRoom, ChinesseCheckersClient.GameService.Player _player) {
            return base.Channel.JoinToRoomAsync(_idRoom, _player);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult LeaveRoom(string _idRoom, int _idPlayer) {
            return base.Channel.LeaveRoom(_idRoom, _idPlayer);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> LeaveRoomAsync(string _idRoom, int _idPlayer) {
            return base.Channel.LeaveRoomAsync(_idRoom, _idPlayer);
        }
        
        public bool IsPlayerInRoom(string _idRoom, int _idPlayer) {
            return base.Channel.IsPlayerInRoom(_idRoom, _idPlayer);
        }
        
        public System.Threading.Tasks.Task<bool> IsPlayerInRoomAsync(string _idRoom, int _idPlayer) {
            return base.Channel.IsPlayerInRoomAsync(_idRoom, _idPlayer);
        }
        
        public void NotifyAllPlayersReady(string _idRoom) {
            base.Channel.NotifyAllPlayersReady(_idRoom);
        }
        
        public System.Threading.Tasks.Task NotifyAllPlayersReadyAsync(string _idRoom) {
            return base.Channel.NotifyAllPlayersReadyAsync(_idRoom);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IEmailMgt")]
    public interface IEmailMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailMgt/SendVerificationCode", ReplyAction="http://tempuri.org/IEmailMgt/SendVerificationCodeResponse")]
        string SendVerificationCode(string _recipients);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailMgt/SendVerificationCode", ReplyAction="http://tempuri.org/IEmailMgt/SendVerificationCodeResponse")]
        System.Threading.Tasks.Task<string> SendVerificationCodeAsync(string _recipients);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailMgt/SendEmail", ReplyAction="http://tempuri.org/IEmailMgt/SendEmailResponse")]
        ChinesseCheckersClient.GameService.OperationResult SendEmail(string _recipients, string _subject, string _body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailMgt/SendEmail", ReplyAction="http://tempuri.org/IEmailMgt/SendEmailResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> SendEmailAsync(string _recipients, string _subject, string _body);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailMgtChannel : ChinesseCheckersClient.GameService.IEmailMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailMgtClient : System.ServiceModel.ClientBase<ChinesseCheckersClient.GameService.IEmailMgt>, ChinesseCheckersClient.GameService.IEmailMgt {
        
        public EmailMgtClient() {
        }
        
        public EmailMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendVerificationCode(string _recipients) {
            return base.Channel.SendVerificationCode(_recipients);
        }
        
        public System.Threading.Tasks.Task<string> SendVerificationCodeAsync(string _recipients) {
            return base.Channel.SendVerificationCodeAsync(_recipients);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult SendEmail(string _recipients, string _subject, string _body) {
            return base.Channel.SendEmail(_recipients, _subject, _body);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> SendEmailAsync(string _recipients, string _subject, string _body) {
            return base.Channel.SendEmailAsync(_recipients, _subject, _body);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameplayMgt", CallbackContract=typeof(ChinesseCheckersClient.GameService.IGameplayMgtCallback))]
    public interface IGameplayMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/JoinToGameplay", ReplyAction="http://tempuri.org/IGameplayMgt/JoinToGameplayResponse")]
        void JoinToGameplay(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/JoinToGameplay", ReplyAction="http://tempuri.org/IGameplayMgt/JoinToGameplayResponse")]
        System.Threading.Tasks.Task JoinToGameplayAsync(string _idRoom, int _idPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/MoveToken", ReplyAction="http://tempuri.org/IGameplayMgt/MoveTokenResponse")]
        void MoveToken(string _idRoom, System.Windows.Point _from, System.Windows.Point _to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/MoveToken", ReplyAction="http://tempuri.org/IGameplayMgt/MoveTokenResponse")]
        System.Threading.Tasks.Task MoveTokenAsync(string _idRoom, System.Windows.Point _from, System.Windows.Point _to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/TerminateTurn", ReplyAction="http://tempuri.org/IGameplayMgt/TerminateTurnResponse")]
        void TerminateTurn(string _idRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/TerminateTurn", ReplyAction="http://tempuri.org/IGameplayMgt/TerminateTurnResponse")]
        System.Threading.Tasks.Task TerminateTurnAsync(string _idRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameplayMgtCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/MoveAllPlayers", ReplyAction="http://tempuri.org/IGameplayMgt/MoveAllPlayersResponse")]
        void MoveAllPlayers(System.Windows.Point _from, System.Windows.Point _to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayMgt/ChangeTurn", ReplyAction="http://tempuri.org/IGameplayMgt/ChangeTurnResponse")]
        void ChangeTurn(int turn);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameplayMgtChannel : ChinesseCheckersClient.GameService.IGameplayMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameplayMgtClient : System.ServiceModel.DuplexClientBase<ChinesseCheckersClient.GameService.IGameplayMgt>, ChinesseCheckersClient.GameService.IGameplayMgt {
        
        public GameplayMgtClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameplayMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameplayMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameplayMgtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameplayMgtClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinToGameplay(string _idRoom, int _idPlayer) {
            base.Channel.JoinToGameplay(_idRoom, _idPlayer);
        }
        
        public System.Threading.Tasks.Task JoinToGameplayAsync(string _idRoom, int _idPlayer) {
            return base.Channel.JoinToGameplayAsync(_idRoom, _idPlayer);
        }
        
        public void MoveToken(string _idRoom, System.Windows.Point _from, System.Windows.Point _to) {
            base.Channel.MoveToken(_idRoom, _from, _to);
        }
        
        public System.Threading.Tasks.Task MoveTokenAsync(string _idRoom, System.Windows.Point _from, System.Windows.Point _to) {
            return base.Channel.MoveTokenAsync(_idRoom, _from, _to);
        }
        
        public void TerminateTurn(string _idRoom) {
            base.Channel.TerminateTurn(_idRoom);
        }
        
        public System.Threading.Tasks.Task TerminateTurnAsync(string _idRoom) {
            return base.Channel.TerminateTurnAsync(_idRoom);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IRelationshipMgt")]
    public interface IRelationshipMgt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/CreateRelationship", ReplyAction="http://tempuri.org/IRelationshipMgt/CreateRelationshipResponse")]
        ChinesseCheckersClient.GameService.OperationResult CreateRelationship(int _idPlayerOwner, int _idPlayerGuest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/CreateRelationship", ReplyAction="http://tempuri.org/IRelationshipMgt/CreateRelationshipResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> CreateRelationshipAsync(int _idPlayerOwner, int _idPlayerGuest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/GetRelationships", ReplyAction="http://tempuri.org/IRelationshipMgt/GetRelationshipsResponse")]
        ChinesseCheckersClient.GameService.Relationship[] GetRelationships(int _idPlayerOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/GetRelationships", ReplyAction="http://tempuri.org/IRelationshipMgt/GetRelationshipsResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Relationship[]> GetRelationshipsAsync(int _idPlayerOwner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/DeclarateBadRelationship", ReplyAction="http://tempuri.org/IRelationshipMgt/DeclarateBadRelationshipResponse")]
        ChinesseCheckersClient.GameService.OperationResult DeclarateBadRelationship(int _idPlayerOwner, int _idPlayerGuest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRelationshipMgt/DeclarateBadRelationship", ReplyAction="http://tempuri.org/IRelationshipMgt/DeclarateBadRelationshipResponse")]
        System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> DeclarateBadRelationshipAsync(int _idPlayerOwner, int _idPlayerGuest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRelationshipMgtChannel : ChinesseCheckersClient.GameService.IRelationshipMgt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RelationshipMgtClient : System.ServiceModel.ClientBase<ChinesseCheckersClient.GameService.IRelationshipMgt>, ChinesseCheckersClient.GameService.IRelationshipMgt {
        
        public RelationshipMgtClient() {
        }
        
        public RelationshipMgtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RelationshipMgtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationshipMgtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RelationshipMgtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChinesseCheckersClient.GameService.OperationResult CreateRelationship(int _idPlayerOwner, int _idPlayerGuest) {
            return base.Channel.CreateRelationship(_idPlayerOwner, _idPlayerGuest);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> CreateRelationshipAsync(int _idPlayerOwner, int _idPlayerGuest) {
            return base.Channel.CreateRelationshipAsync(_idPlayerOwner, _idPlayerGuest);
        }
        
        public ChinesseCheckersClient.GameService.Relationship[] GetRelationships(int _idPlayerOwner) {
            return base.Channel.GetRelationships(_idPlayerOwner);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.Relationship[]> GetRelationshipsAsync(int _idPlayerOwner) {
            return base.Channel.GetRelationshipsAsync(_idPlayerOwner);
        }
        
        public ChinesseCheckersClient.GameService.OperationResult DeclarateBadRelationship(int _idPlayerOwner, int _idPlayerGuest) {
            return base.Channel.DeclarateBadRelationship(_idPlayerOwner, _idPlayerGuest);
        }
        
        public System.Threading.Tasks.Task<ChinesseCheckersClient.GameService.OperationResult> DeclarateBadRelationshipAsync(int _idPlayerOwner, int _idPlayerGuest) {
            return base.Channel.DeclarateBadRelationshipAsync(_idPlayerOwner, _idPlayerGuest);
        }
    }
}
